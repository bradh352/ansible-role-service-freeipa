# General Configuration
[general]

# If SSH public keys are hosted at a specific url, provide that url pattern
# here.  The url pattern must take the username as a single argument using the
# standard python format style placeholder.  E.g. `https://github.com/{}-org.keys`
sshpubkey_url_pattern={{ service_freeipa_idpsync_sshpubkey_url_pattern }}

# If a proxy is needed for http requets, this is the location of the proxy.
http_proxy={{ service_freeipa_idpsync_http_proxy }}

# Free IPA Configuration
[freeipa]

# This can only be run on an enrolled FreeIPA client or server as it depends on
# FreeIPA configuration files to determine server paths.

# Username to use to authenticate
username=svc_admin

# User keytab file for authentication
user_keytab=/etc/krb5.svc_admin.keytab

# Comma delimited list of users to ignore from freeipa
{% set system_users=[ "admin", service_freeipa_enroll_user, "svc_admin" ] %}
ignore_users={{ (service_freeipa_idpsync_local_users + system_users) | join(",") }}

# Comma delimited list of groups to ignore from freeipa
{% set system_groups=[ "admins", "editors", "ipausers", "trust admins", "service_accounts" ] %}
ignore_groups={{ (service_freeipa_idpsync_local_groups + system_groups) | join(",") }}

# Name configured for external IDP auth that all imported users should be
# associated with.
idp_name={{ service_freeipa_idpsync_idp_name }}


# Upstream IDP configuration
[idp]
# Type of upstream idp to import from.  Currently only supports ldap.
type="ldap"


# If the upstream IDP is LDAP, these are the attributes
[idp:ldap]
# LDAP server to use
server={{ service_freeipa_idpsync_server }}

# Use SSL or not
use_ssl={{ 'True' if service_freeipa_idpsync_use_ssl else 'False' }}

# Bind DN for retrieving information
binddn={{ service_freeipa_idpsync_binddn }}

# Bind Password for BindDN
bindpass={{ service_freeipa_idpsync_bindpass }}

# Base for users
userdn={{ service_freeipa_idpsync_userdn }}

# Base for groups
groupdn={{ service_freeipa_idpsync_groupdn }}

# Comma delimited list of users to ignore from idp
ignore_users={{ service_freeipa_idpsync_ignore_users | join(",") }}

# Comma delimited list of groups to ignore from idp
ignore_groups={{ service_freeipa_idpsync_ignore_groups | join(",") }}

# Comma delimited list of key/value pairs for groups to rename.
# E.g. rename_groups=Software Engineers=sweng,IT Admins=infra
{% set rename_groups=[] %}
{% for key, val in service_freeipa_idpsync_rename_groups.items() %}
{%   do rename_groups.append(key ~ "=" ~ val) %}
{% endfor %}
rename_groups={{ rename_groups|join(",") }}

# User: Attribute for username
attr_username={{ service_freeipa_idpsync_attr_username }}

# User: Attribute for Full name
attr_name={{ service_freeipa_idpsync_attr_fullname }}

# User: Attribute for First Name
attr_fname={{ service_freeipa_idpsync_attr_fname }}

# User: Attribute for Last Name
attr_lname={{ service_freeipa_idpsync_attr_lname }}

# User: Attribute for Email
attr_email={{ service_freeipa_idpsync_attr_email }}

# User: Attribute for Login Shell.  Optional, upstream provider may not have this.
attr_shell={{ service_freeipa_idpsync_attr_shell }}

# User: Attribute for POSIX user id. Optional, upstream provider may not have this.
attr_uid={{ service_freeipa_idpsync_attr_uid }}

# User: Attribute to determine if user is active or not
attr_active={{ service_freeipa_idpsync_attr_active }}

# User: Comma delimited list of values if user is active.
attr_active_values={{ service_freeipa_idpsync_active_values | join(",") }}

# Group: Attribute for group name
attr_group_name={{ service_freeipa_idpsync_attr_group_name }}

# Group: Attribute for description
attr_group_description={{ service_freeipa_idpsync_attr_group_desc }}

# Group: Attribute for group members
attr_group_members={{ service_freeipa_idpsync_attr_group_members }}


---
- name: "Determine nodes which are initialized with Admin keytab"
  stat:
    path: /etc/krb5.admin.keytab
  delegate_to: "{{ item }}"
  ignore_unreachable: yes
  ignore_errors: true
  failed_when: false
  changed_when: false
  register: freeipa_nodes_adminkeytab
  with_items: "{{ groups['freeipa_servers'] }}"

- name: "See if we have the admin keytab installed"
  stat:
    path: /etc/krb5.admin.keytab
  register: freeipa_adminkeytab

- name: "Determine which node to use for copying the admin keytab"
  set_fact:
    freeipa_adminkeytab_nodes: >-
      {%- set eligible_adminkeytab_hosts = [] %}
      {%- for node in freeipa_nodes_adminkeytab.results %}
      {%-   if node.stat.exists|default(false) %}
      {%-     do eligible_adminkeytab_hosts.append(node.item) %}
      {%-   endif %}
      {%- endfor %}
      {{- eligible_adminkeytab_hosts -}}

- name: "Determine admin keytab bootstrap node"
  set_fact:
    freeipa_adminkeytab_bootstrap_node: "{{ freeipa_adminkeytab_nodes[0] if freeipa_adminkeytab_nodes | length > 0 else freeipa_primary_node }}"

- name: "Get kerberos ticket for admin user using password"
  shell: echo "{{ service_freeipa_admin_pass }}" | kinit admin
  no_log: true
  changed_when: false

- name: "Create admin keytab file"
  shell: echo -e "{{ service_freeipa_admin_pass }}\n{{ service_freeipa_admin_pass }}\n" | ipa-getkeytab -p admin -P -k /etc/krb5.admin.keytab
  no_log: true
  when: not freeipa_adminkeytab.stat.exists and inventory_hostname == freeipa_adminkeytab_bootstrap_node

- name: "Fetch the client admin keyring"
  shell: base64 /etc/krb5.admin.keytab
  register: freeipa_adminkeytab_data
  when: inventory_hostname != freeipa_adminkeytab_bootstrap_node and not freeipa_adminkeytab.stat.exists
  delegate_to: "{{ freeipa_adminkeytab_bootstrap_node }}"

- name: "Install the admin keytab"
  copy:
    dest: "/etc/krb5.admin.keytab"
    content: "{{ freeipa_adminkeytab_data.stdout | b64decode }}"
    mode: "600"
    owner: root
  when: inventory_hostname != freeipa_adminkeytab_bootstrap_node and not freeipa_adminkeytab.stat.exists

- name: "Ensure permissions on admin keytab"
  file:
    path: "/etc/krb5.admin.keytab"
    mode: "600"
    owner: root
